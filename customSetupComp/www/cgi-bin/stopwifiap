#!/bin/sh

source wifiexport

#LOG_FILE=/tmp/wifi_http.log

SUBNET=`ifconfig wlan0 | grep "inet addr:" | cut -d ':' -f 2 | sed 's/  *.*$//' | cut -d '.' -f -3`".0/24"

echo -en "<font color=\"black\" >$(date "+%T"):</font> Stopping Wifi Access Point...<br>\r\n" >> ${LOG_MSG_FILE}
##############################
${WIFITOOL} ap stop >> ${LOG_CMD_FILE}
echo -en "<font color=\"black\" >$(date "+%T"):</font> Wifi Access Point is stopped.<br>\r\n" >> ${LOG_MSG_FILE}
echo -en "Wifi Access Point is stopped.<br>\r\n"

### Stop the DHCP server
echo -ne "<font color=\"black\" >$(date "+%T"):</font> Reconfiguring the DHCP server...<br>\r\n" >> ${LOG_MSG_FILE}
# Instead of erasing the config file, it is replaced by the default one
# in order to keep the USB interface up & running.
/etc/init.d/dnsmasq stop
rm -f /tmp/dnsmasq.wlan.conf
touch /tmp/dnsmasq.wlan.conf
/etc/init.d/dnsmasq start

### Turn off IP forwarding
echo -ne "<font color=\"black\" >$(date "+%T"):</font> Disabling IP forwarding...<br>\r\n" >> ${LOG_MSG_FILE}
echo 0 > /proc/sys/net/ipv4/ip_forward
### Delete the NAT
echo -ne "<font color=\"black\" >$(date "+%T"):</font> Deleting the NAT...<br>\r\n" >> ${LOG_MSG_FILE}
rmmod ipt_MASQUERADE
iptables -t nat -F
iptables -t mangle -F

iptables -D FORWARD --match state --state RELATED,ESTABLISHED --jump ACCEPT
[ $? -ne 0 ] && \
    echo -ne "<font color=\"red\" >$(date "+%T"): FAILED ! iptables -D FORWARD --match state --state RELATED,ESTABLISHED --jump ACCEPT</font><br>\r\n" >> ${LOG_MSG_FILE}

iptables -D FORWARD -i ${ITF_LAN} --destination ${SUBNET} --match state --state NEW --jump ACCEPT
[ $? -ne 0 ] && \
    echo -ne "<font color=\"red\" >$(date "+%T"): FAILED ! iptables -D FORWARD -i ${ITF_LAN} --destination ${SUBNET} --match state --state NEW --jump ACCEPT</font><br>\r\n" >> ${LOG_MSG_FILE}

iptables -D INPUT -s ${SUBNET} --jump ACCEPT
[ $? -ne 0 ] && \
    echo -ne "<font color=\"red\" >$(date "+%T"): FAILED ! iptables -D INPUT -s ${SUBNET} --jump ACCEPT</font><br>\r\n" >> ${LOG_MSG_FILE}

iptables -D FORWARD -i ${ITF_WAN} --jump ACCEPT
[ $? -ne 0 ] && \
    echo -ne "<font color=\"red\" >$(date "+%T"): FAILED ! iptables -D FORWARD -i ${ITF_WAN} --jump ACCEPT</font><br>\r\n" >> ${LOG_MSG_FILE}

iptables -D FORWARD -o ${ITF_WAN} --jump ACCEPT
[ $? -ne 0 ] && \
    echo -ne "<font color=\"red\" >$(date "+%T"): FAILED ! iptables -D FORWARD -o ${ITF_WAN} --jump ACCEPT</font><br>\r\n" >> ${LOG_MSG_FILE}

route del default gw ${ITF_WAN_ADDR} ${ITF_WAN}

### Shutdown the WLAN interface
echo -ne "<font color=\"black\" >$(date "+%T"):</font> Unmounting ${ITF_LAN} <br>\r\n" >> ${LOG_MSG_FILE}
/sbin/ifconfig ${ITF_LAN} down >> ${LOG_CMD_FILE}

### Shutdown the relay interface: rmnet0 | eth0
echo -ne "<font color=\"black\" >$(date "+%T"):</font> Unmounting the relay interface ${ITF_WAN}...<br>\r\n" >> ${LOG_MSG_FILE}
case "${ITF_WAN}" in
    eth*) ifconfig ${ITF_WAN} down ;;
    rmnet*) cm radio off ;;
esac

### AP should be now up & running
echo -ne "<font color=\"black\" >$(date "+%T"):</font> Access Point is off.<br>\r\n" >> ${LOG_MSG_FILE}
##############################

### For test purpose on PC only
# chmod 666 /tmp/wifi_http.log

###echo -en "<br>\r\n"
###echo -en "<FORM><INPUT Type=\"button\" VALUE=\"Back\" onClick=\"history.go(-1);return true;\"></FORM>\r\n"
###echo -en "<br>(end of output<br>\r\n"
